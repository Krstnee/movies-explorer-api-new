{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport function handleRegister(password, email) {\n  return fetch(`${BASE_URL}/signup`, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST',\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => res.ok && res.json());\n}\nexport function handleLogin(password, email) {\n  return fetch(`${BASE_URL}/signin`, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST',\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => res.ok && res.json());\n}\nexport function handleCheckAuth() {\n  return fetch(`${BASE_URL}/users/me`, {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    },\n    method: 'GET'\n  }).then(res => res.ok ? res.json() : Promise.reject(res.statusText));\n}","map":{"version":3,"names":["BASE_URL","handleRegister","password","email","fetch","headers","method","body","JSON","stringify","then","res","ok","json","handleLogin","handleCheckAuth","Authorization","localStorage","getItem","Promise","reject","statusText"],"sources":["C:/Users/crist/dev/mesto-react/mesto-react/src/utils/authRequests.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co'\n\nexport function handleRegister(password, email) {\n  return fetch(`${BASE_URL}/signup`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n    body: JSON.stringify({ password, email }),\n  }).then((res) => res.ok && res.json())\n}\n\nexport function handleLogin(password, email) {\n  return fetch(`${BASE_URL}/signin`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n    body: JSON.stringify({ password, email }),\n  }).then((res) => res.ok && res.json())\n}\n\nexport function handleCheckAuth() {\n  return fetch(`${BASE_URL}/users/me`, {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${localStorage.getItem('token')}`,\n    },\n    method: 'GET',\n  }).then((res) => (res.ok ? res.json() : Promise.reject(res.statusText)))\n}\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,KAAlC,EAAyC;EAC9C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,OAAO,EAAE;MACP,gBAAgB;IADT,CADwB;IAIjCC,MAAM,EAAE,MAJyB;IAKjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEP,QAAF;MAAYC;IAAZ,CAAf;EAL2B,CAAvB,CAAL,CAMJO,IANI,CAMEC,GAAD,IAASA,GAAG,CAACC,EAAJ,IAAUD,GAAG,CAACE,IAAJ,EANpB,CAAP;AAOD;AAED,OAAO,SAASC,WAAT,CAAqBZ,QAArB,EAA+BC,KAA/B,EAAsC;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,OAAO,EAAE;MACP,gBAAgB;IADT,CADwB;IAIjCC,MAAM,EAAE,MAJyB;IAKjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEP,QAAF;MAAYC;IAAZ,CAAf;EAL2B,CAAvB,CAAL,CAMJO,IANI,CAMEC,GAAD,IAASA,GAAG,CAACC,EAAJ,IAAUD,GAAG,CAACE,IAAJ,EANpB,CAAP;AAOD;AAED,OAAO,SAASE,eAAT,GAA2B;EAChC,OAAOX,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;IACnCK,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEPW,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;IAFhD,CAD0B;IAKnCZ,MAAM,EAAE;EAL2B,CAAzB,CAAL,CAMJI,IANI,CAMEC,GAAD,IAAUA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBM,OAAO,CAACC,MAAR,CAAeT,GAAG,CAACU,UAAnB,CANjC,CAAP;AAOD"},"metadata":{},"sourceType":"module"}