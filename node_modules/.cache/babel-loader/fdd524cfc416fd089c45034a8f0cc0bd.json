{"ast":null,"code":"import _classCallCheck from\"C:/Users/crist/dev/mesto-react/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/crist/dev/mesto-react/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";import apiConfig from'./apiConfig';var Api=/*#__PURE__*/function(){function Api(configData){_classCallCheck(this,Api);this._getResponseData=function(res,message){if(res.ok){return res.json();}else{return Promise.reject(\"\\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status,\" \\u043F\\u0440\\u0438 \").concat(message));}};this._baseUrl=configData.apiData.baseUrl;this._headers=configData.apiData.headers;}_createClass(Api,[{key:\"getUserInfo\",value:function getUserInfo(){var _this=this;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:this._headers}).then(function(res){return _this._getResponseData(res,'загрузке данных профиля с сервера');});}},{key:\"getInititalCards\",value:function getInititalCards(){var _this2=this;return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:this._headers}).then(function(res){return _this2._getResponseData(res,'загрузке постов с сервера');});}},{key:\"setUserInfo\",value:function setUserInfo(userInfo){var _this3=this;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify(userInfo)}).then(function(res){return _this3._getResponseData(res,'отправке данных пользователя на сервер');});}},{key:\"createNewCard\",value:function createNewCard(cardElement){var _this4=this;return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify(cardElement)}).then(function(res){return _this4._getResponseData(res,'создании нового поста');});}},{key:\"removeCard\",value:function removeCard(cardElement){var _this5=this;return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardElement._id),{method:'DELETE',headers:this._headers}).then(function(res){return _this5._getResponseData(res,'удалении поста');});}},{key:\"setAvatar\",value:function setAvatar(avatarLink){var _this6=this;console.log(avatarLink);return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:avatarLink})}).then(function(res){return _this6._getResponseData(res,'отправке изображения пользователя на сервер');});}},{key:\"handleLikeServer\",value:function handleLikeServer(card,isLiked){var _this7=this;var httpMethod=isLiked?'DELETE':'PUT';return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(card._id,\"/likes\"),{method:httpMethod,headers:this._headers}).then(function(res){return _this7._getResponseData(res,'загрузке данных с сервера');});}}]);return Api;}();var api=new Api(apiConfig);export default api;","map":{"version":3,"names":["apiConfig","Api","configData","_getResponseData","res","message","ok","json","Promise","reject","status","_baseUrl","apiData","baseUrl","_headers","headers","fetch","then","userInfo","method","body","JSON","stringify","cardElement","_id","avatarLink","console","log","avatar","card","isLiked","httpMethod","api"],"sources":["C:/Users/crist/dev/mesto-react/mesto-react/src/utils/api.js"],"sourcesContent":["import apiConfig from './apiConfig'\n\nclass Api {\n  constructor(configData) {\n    this._baseUrl = configData.apiData.baseUrl\n    this._headers = configData.apiData.headers\n  }\n\n  _getResponseData = (res, message) => {\n    if (res.ok) {\n      return res.json()\n    } else {\n      return Promise.reject(`ошибка ${res.status} при ${message}`)\n    }\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, { headers: this._headers }).then(\n      (res) => this._getResponseData(res, 'загрузке данных профиля с сервера')\n    )\n  }\n\n  getInititalCards() {\n    return fetch(`${this._baseUrl}/cards`, { headers: this._headers }).then(\n      (res) => this._getResponseData(res, 'загрузке постов с сервера')\n    )\n  }\n\n  setUserInfo(userInfo) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(userInfo),\n    }).then((res) =>\n      this._getResponseData(res, 'отправке данных пользователя на сервер')\n    )\n  }\n\n  createNewCard(cardElement) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(cardElement),\n    }).then((res) => this._getResponseData(res, 'создании нового поста'))\n  }\n\n  removeCard(cardElement) {\n    return fetch(`${this._baseUrl}/cards/${cardElement._id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res, 'удалении поста'))\n  }\n\n  setAvatar(avatarLink) {\n    console.log(avatarLink)\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({ avatar: avatarLink }),\n    }).then((res) =>\n      this._getResponseData(res, 'отправке изображения пользователя на сервер')\n    )\n  }\n\n  handleLikeServer(card, isLiked) {\n    const httpMethod = isLiked ? 'DELETE' : 'PUT'\n    return fetch(`${this._baseUrl}/cards/${card._id}/likes`, {\n      method: httpMethod,\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res, 'загрузке данных с сервера'))\n  }\n}\n\nconst api = new Api(apiConfig)\n\nexport default api\n"],"mappings":"8PAAA,MAAOA,UAAP,KAAsB,aAAtB,C,GAEMC,I,yBACJ,aAAYC,UAAZ,CAAwB,gCAKxBC,gBALwB,CAKL,SAACC,GAAD,CAAMC,OAAN,CAAkB,CACnC,GAAID,GAAG,CAACE,EAAR,CAAY,CACV,MAAOF,IAAG,CAACG,IAAJ,EAAP,CACD,CAFD,IAEO,CACL,MAAOC,QAAO,CAACC,MAAR,gDAAyBL,GAAG,CAACM,MAA7B,gCAA2CL,OAA3C,EAAP,CACD,CACF,CAXuB,CACtB,KAAKM,QAAL,CAAgBT,UAAU,CAACU,OAAX,CAAmBC,OAAnC,CACA,KAAKC,QAAL,CAAgBZ,UAAU,CAACU,OAAX,CAAmBG,OAAnC,CACD,C,2CAUD,sBAAc,gBACZ,MAAOC,MAAK,WAAI,KAAKL,QAAT,cAA8B,CAAEI,OAAO,CAAE,KAAKD,QAAhB,CAA9B,CAAL,CAA+DG,IAA/D,CACL,SAACb,GAAD,QAAS,MAAI,CAACD,gBAAL,CAAsBC,GAAtB,CAA2B,mCAA3B,CAAT,EADK,CAAP,CAGD,C,gCAED,2BAAmB,iBACjB,MAAOY,MAAK,WAAI,KAAKL,QAAT,WAA2B,CAAEI,OAAO,CAAE,KAAKD,QAAhB,CAA3B,CAAL,CAA4DG,IAA5D,CACL,SAACb,GAAD,QAAS,OAAI,CAACD,gBAAL,CAAsBC,GAAtB,CAA2B,2BAA3B,CAAT,EADK,CAAP,CAGD,C,2BAED,qBAAYc,QAAZ,CAAsB,iBACpB,MAAOF,MAAK,WAAI,KAAKL,QAAT,cAA8B,CACxCQ,MAAM,CAAE,OADgC,CAExCJ,OAAO,CAAE,KAAKD,QAF0B,CAGxCM,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAHkC,CAA9B,CAAL,CAIJD,IAJI,CAIC,SAACb,GAAD,QACN,OAAI,CAACD,gBAAL,CAAsBC,GAAtB,CAA2B,wCAA3B,CADM,EAJD,CAAP,CAOD,C,6BAED,uBAAcmB,WAAd,CAA2B,iBACzB,MAAOP,MAAK,WAAI,KAAKL,QAAT,WAA2B,CACrCQ,MAAM,CAAE,MAD6B,CAErCJ,OAAO,CAAE,KAAKD,QAFuB,CAGrCM,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeC,WAAf,CAH+B,CAA3B,CAAL,CAIJN,IAJI,CAIC,SAACb,GAAD,QAAS,OAAI,CAACD,gBAAL,CAAsBC,GAAtB,CAA2B,uBAA3B,CAAT,EAJD,CAAP,CAKD,C,0BAED,oBAAWmB,WAAX,CAAwB,iBACtB,MAAOP,MAAK,WAAI,KAAKL,QAAT,mBAA2BY,WAAW,CAACC,GAAvC,EAA8C,CACxDL,MAAM,CAAE,QADgD,CAExDJ,OAAO,CAAE,KAAKD,QAF0C,CAA9C,CAAL,CAGJG,IAHI,CAGC,SAACb,GAAD,QAAS,OAAI,CAACD,gBAAL,CAAsBC,GAAtB,CAA2B,gBAA3B,CAAT,EAHD,CAAP,CAID,C,yBAED,mBAAUqB,UAAV,CAAsB,iBACpBC,OAAO,CAACC,GAAR,CAAYF,UAAZ,EACA,MAAOT,MAAK,WAAI,KAAKL,QAAT,qBAAqC,CAC/CQ,MAAM,CAAE,OADuC,CAE/CJ,OAAO,CAAE,KAAKD,QAFiC,CAG/CM,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEM,MAAM,CAAEH,UAAV,CAAf,CAHyC,CAArC,CAAL,CAIJR,IAJI,CAIC,SAACb,GAAD,QACN,OAAI,CAACD,gBAAL,CAAsBC,GAAtB,CAA2B,6CAA3B,CADM,EAJD,CAAP,CAOD,C,gCAED,0BAAiByB,IAAjB,CAAuBC,OAAvB,CAAgC,iBAC9B,GAAMC,WAAU,CAAGD,OAAO,CAAG,QAAH,CAAc,KAAxC,CACA,MAAOd,MAAK,WAAI,KAAKL,QAAT,mBAA2BkB,IAAI,CAACL,GAAhC,WAA6C,CACvDL,MAAM,CAAEY,UAD+C,CAEvDhB,OAAO,CAAE,KAAKD,QAFyC,CAA7C,CAAL,CAGJG,IAHI,CAGC,SAACb,GAAD,QAAS,OAAI,CAACD,gBAAL,CAAsBC,GAAtB,CAA2B,2BAA3B,CAAT,EAHD,CAAP,CAID,C,mBAGH,GAAM4B,IAAG,CAAG,GAAI/B,IAAJ,CAAQD,SAAR,CAAZ,CAEA,cAAegC,IAAf"},"metadata":{},"sourceType":"module"}